name: Python CI/CD

on:
  release:
    types: [created]
  push:
    branches:
      - master
      - develop/*
  pull_request:
    branches:
      - master

env:
  app-name: cache-pys
  cache-version: v1.1.0
  PYTHONUNBUFFERED: 0
  DOCKER_BUILDKIT: 1
  # Cache configuration for tests
  CACHE_DEFAULT_TTL: 10
  CACHE_CLEANUP_INTERVAL: 5
  CACHE_MAX_SIZE: 50
  CACHE_STRATEGY: hybrid
  CACHE_WEIGHT_RECENCY: 0.6
  CACHE_WEIGHT_FREQUENCY: 0.4

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            setup.py

      - name: Create requirements.txt
        shell: bash
        run: |
          echo "# Cache-PYS requirements" > requirements.txt
          echo "pytest>=7.0.0" >> requirements.txt
          echo "pytest-cov>=4.1.0" >> requirements.txt
          echo "black>=23.3.0" >> requirements.txt
          echo "flake8>=6.0.0" >> requirements.txt
          echo "mypy>=1.0.0" >> requirements.txt

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -V && pip -V
          pip install -r requirements.txt
          pip install -e .

      - name: Install CI tools
        shell: bash
        run: |
          pip install -U --verbose \
            pytest-html>=4.0.0 \
            pytest-timeout>=2.1.0

      - name: Run linting
        uses: pre-commit/action@v3.0.1

      - name: Run Test with Different Cache Strategies
        shell: bash
        run: |
          # Test with fixed TTL
          export CACHE_STRATEGY=fixed
          export CACHE_DEFAULT_TTL=5
          pytest --verbose --timeout=60 -k "test_fixed_ttl"

          # Test with sliding TTL
          export CACHE_STRATEGY=sliding
          export CACHE_DEFAULT_TTL=5
          pytest --verbose --timeout=60 -k "test_sliding_ttl"

          # Test with LRU
          export CACHE_STRATEGY=lru
          export CACHE_MAX_SIZE=10
          pytest --verbose --timeout=60 -k "test_lru"

          # Test with LFU
          export CACHE_STRATEGY=lfu
          export CACHE_MAX_SIZE=10
          pytest --verbose --timeout=60 -k "test_lfu"

          # Test with hybrid strategy
          export CACHE_STRATEGY=hybrid
          export CACHE_DEFAULT_TTL=5
          export CACHE_MAX_SIZE=10
          export CACHE_WEIGHT_RECENCY=0.6
          export CACHE_WEIGHT_FREQUENCY=0.4
          pytest --verbose --timeout=60 -k "test_hybrid"

          # Run all tests with default settings
          export CACHE_STRATEGY=fixed
          export CACHE_DEFAULT_TTL=10
          pytest --verbose --timeout=60 --durations=0 --showlocals --maxfail=2

      - name: Test Environment Variable Configuration
        shell: bash
        run: |
          # Run sample with various environment configurations
          echo "Testing with default environment..."
          python sample.py

          echo "Testing with custom environment..."
          export CACHE_DEFAULT_TTL=15
          export CACHE_STRATEGY=sliding
          python sample.py

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Lint Dockerfile
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

      - name: Build and export Docker image
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ryuichi1208/${{ env.app-name }}:latest

      - name: Upload Docker image artifact
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.app-name }}
          path: images/${{ env.app-name }}.tar
          retention-days: 1
