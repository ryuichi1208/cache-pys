name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  discussions: write
  id-token: write # For PyPI trusted publishing

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine wheel setuptools

      - name: Build package
        run: |
          python -m build --sdist --wheel --outdir dist/

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          VERSION="${TAG_NAME#v}"
          RELEASE_NOTES="Release notes for $TAG_NAME"

          if [ -f CHANGELOG.md ]; then
            # Extract release notes from CHANGELOG if it exists
            RELEASE_NOTES=$(sed -n "/## \[$VERSION\]/,/## \[/p" CHANGELOG.md | sed '1d;$d')
          fi

          gh release create "$TAG_NAME" \
            --title "Release $TAG_NAME" \
            --notes "$RELEASE_NOTES" \
            ./dist/*

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true

  docker:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract tag version
        id: tag
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ryuichi1208/cache-pys:latest
            ryuichi1208/cache-pys:${{ steps.tag.outputs.version }}
          cache-from: type=registry,ref=ryuichi1208/cache-pys:buildcache
          cache-to: type=registry,ref=ryuichi1208/cache-pys:buildcache,mode=max
